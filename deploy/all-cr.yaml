---
# Source: joylive-webhook/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: joylive-webhook
  namespace: joylive
---
# Source: joylive-webhook/templates/secret.yaml
apiVersion: v1
type: Opaque
kind: Secret
metadata:
  name: dynamic-admission-control-certs
  namespace: joylive
data:
  dac-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMGVBdk9pNjM3Z2xUV0VVUDhIVUw4UzNPWUJzckJzNVBGMmpHeG9hYXhaSVg4MjBWCmRvejQxQ3MxRnV4UFRyeXYyZ0VNYWI3bHM3SWN5QmkzK1c1RG9INEZjMllBQWUyeEk3YSsrK21EcTVaVVdFSDMKRGRFR2J4bjZnbmI0YnVKOGt2Y0V1NTdSUjJFelk4ckx4UXRNU2JnZW9JT0dpVENUR0JuYzVaYXQxc2dVeEpRRQpzYlh1ZE1aY2VGSWozVVZ3eDJpNGdGcE1laFJJU01ac25RczhVR1NLQVZ6aWRkTTlYZlFaQjdTZjU1NkxHMnpvCjFBeXZuVUxRSjVxd2NKRDkrVnNPUFMrMnpNUnIxL2l3Z1BySjlBdVc0dlU4TUpHTlh5QUFtU0E2bjFRVHZWYUcKUCtrSlpvNkFhWEthNXNjS3FhbmFpRXR6dkJqeVhpVHp5NnFGQlFJREFRQUJBb0lCQVFDNEpjdHFjcG1CNjM3TQpnWFJWMkcxTkJaTUJzblRUT093ZXJ4bFNFY0wxUFpWMFNpODk0TDFuZEMzVjJpeFArckVWU0R3N0FIdU5hdWRrCkRvUkdBQ0NvVGtxOEVUQktnT01mWWZZN0ZJNHFYUEhPcXJwNXpnQ21OUllmcVFHY1VXOWFpQkVJQ25hMythcGMKa2hDdTZKWGNUUWZhY096M3JMNHp0R1drc013QkdkOWJUYjlyNnlrdUVreGdzUkp6ZFQ3M09nS3pTdCtjdVlOWQpKclRLTmx0d3drZW0wb1NnMFFLYWFXRENtRENuYi8vbkJ2blNMcFFhcmhGd2k5OGVyQnVUVEJTWjVZTWhTQ1plClhSL3dIejlqalkxd3hkRTk0TlJqenRQZWJCT0IrVnd5dWs4QURIRGJYeVpyNlR5dGxSSlNVdURTYlgvS0xKS0IKZTY5a1g3YlZBb0dCQVBwMG5kait0R1E0d1BqQkFaN1NhOE1ZVVB3WjEwVVdMZU5BWUhrZ2JlSTFnazVQVU5oNApTbkZsN2ZxRDZUOGEraFRDM2JmVThOUDlpSjFYV1pYcVhibWU5ZW95eEFkUWVPTmI3aFJybEptNEJDQ2cwR1dMCjNJazM3Q09lYk5MU29TRU05Y3EzMVhhVUtnendQa2I2NU0wKzRyWkw2SG00SHZhNDR5RkNncDlYQW9HQkFOYUYKbC90eEVmWjI3blNmNVROWHFsdGNhbkxxVTZwRENRSVpTd3M1a255QURRY2lxc01ZbmZ4eTJCcHBCbSs4d0NOMApnbGtrdDVBejB5b1pLclVXdVA1S2hWK1FNbEF0NVNZaFJNT2FOV3RwSEJubXdmdW5XdzM5Tk5wY1JqVmoyaGZaClZEcHV1K3BMWDdYdWlFc1RndmdDYzBEQ0U3YVo2cEU5UzJZcWxURURBb0dCQU5XSEN2UnY0dGYzVXY1QmZ1SXIKUDlpcktKQm1iNVBsSHVZNmdvV0NVbXlqZGg3Um5IbVJ4Tlg5TXZGNytTWG1HQVFQUnZ4dHZZemZBTlEwSHBxagpuNWlibjhrMTBzN3htcjhzSjBTZG02bWFxMW91QUw0eWlha3JWbFhmd2FQVUU2K2Izd29meFF3OXNjUXFKczVaCkpTeWZTcVprL1NTWkJ6ME4wQWNSTDFBdEFvR0FMd1NBMXg5bExIdk1yOHNMMVVEMW1haWJ2Q3dYd2syRy8rckQKUSthT2NMTXdKOHcxV1NWZ0d5Q2d0TWtvRy8xbXIxNnQ0eFBsRjdvRUlrbjV6azc0cE9ONGNBV093WHdOcVZuSgpWSVhNQjRxMkdnYzFwUTU5S29mQXVjdFhxQVFHblF1SkpuVjJ3bGRhMXVrOC9oZDhzUmI0WTgwbHZQUG5NWVlaCnJIN1F6RGtDZ1lFQThrNHdBaEZiUyt3UU5yZ1BPdTIxdmJPWnFndGRuVU0rajZyWmtxdWU3bnNMMVczVjJUWFMKYUpRMUoxZmRqalNwYWxsQTFpUXFKYjJ2SzJDR3RnRXRuWkZsVkhEYWFaREppMWRabDEvMk1md01OSFZ6c2JwaQorSXAxWUF5SHBsdjUzc0J1MjZ0MmN1TGhSWjNvMWRDVm93eTJmSnBHZFBocE40eXB0Q0hTUmJFPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  dac.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdJRENDQkFpZ0F3SUJBZ0lVTDdoZk52cE9lNitVQVphTXZPRmFucHlqT0JNd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuTVJBd0RnWURWUVFIRXdkQwpaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkRiMjUwY205c01Tc3dLUVlEClZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeWFYUjVNU1V3SXdZRFZRUUQKRXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1CNFhEVEkwTURReU5qQXdOVGt3TUZvWApEVE0wTURReU5EQXdOVGt3TUZvd2dhWXhDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuCk1SQXdEZ1lEVlFRSEV3ZENaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkQKYjI1MGNtOXNNU3N3S1FZRFZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeQphWFI1TVNJd0lBWURWUVFERXhsRWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMGVBdk9pNjM3Z2xUV0VVUDhIVUw4UzNPWUJzckJzNVAKRjJqR3hvYWF4WklYODIwVmRvejQxQ3MxRnV4UFRyeXYyZ0VNYWI3bHM3SWN5QmkzK1c1RG9INEZjMllBQWUyeApJN2ErKyttRHE1WlVXRUgzRGRFR2J4bjZnbmI0YnVKOGt2Y0V1NTdSUjJFelk4ckx4UXRNU2JnZW9JT0dpVENUCkdCbmM1WmF0MXNnVXhKUUVzYlh1ZE1aY2VGSWozVVZ3eDJpNGdGcE1laFJJU01ac25RczhVR1NLQVZ6aWRkTTkKWGZRWkI3U2Y1NTZMRzJ6bzFBeXZuVUxRSjVxd2NKRDkrVnNPUFMrMnpNUnIxL2l3Z1BySjlBdVc0dlU4TUpHTgpYeUFBbVNBNm4xUVR2VmFHUCtrSlpvNkFhWEthNXNjS3FhbmFpRXR6dkJqeVhpVHp5NnFGQlFJREFRQUJvNElCClB6Q0NBVHN3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRU1dWTC9idGROUjZIQkh1cWdWMW1kNzhKTgpsakFmQmdOVkhTTUVHREFXZ0JRUGxNRjVqTTNPVmRrbzc1VG5YeDJ3aVJ5b3ZEQ0J1d1lEVlIwUkJJR3pNSUd3CmdnbHNiMk5oYkdodmMzU0NEMnB2ZVd4cGRtVXRkMlZpYUc5dmE0SVhhbTk1YkdsMlpTMTNaV0pvYjI5ckxtcHYKZVd4cGRtV0NHMnB2ZVd4cGRtVXRkMlZpYUc5dmF5NXFiM2xzYVhabExuTjJZNElTZG1Gc2FXUmhkR2x1WnkxMwpaV0pvYjI5cmdoNTJZV3hwWkdGMGFXNW5MWGRsWW1odmIyc3VhM1ZpWlMxaFpHUnZibk9DSW5aaGJHbGtZWFJwCmJtY3RkMlZpYUc5dmF5NXJkV0psTFdGa1pHOXVjeTV6ZG1PSEJIOEFBQUV3RFFZSktvWklodmNOQVFFTkJRQUQKZ2dJQkFEbkN5dnZlM1pGcUlwS0k5ckVIYlV6amYyS2U1Z0hkczZzYU9weWJtaktib3VianNJNUttZzhVR25QcQp1eVZyd1V5Y2xZdklaWlhmT3BlSnZ3L0JNYXFMMEx3OGU5Uy9xTnhKKzN3WlN6OHZDWXFNM0JaUjVSNVZScEt1CkhOVm1hZ25LMnJ2UU5oMVVFZkpDYlRKUW55M2tqcVd6b29FeHhsajFyVFVjUWJZeDE0MFFmM2dpMUpJYk5lTEcKMXhqeGU5K3BCZWw1RDdncHNGRjVhL0Z1U1hoMWNXSVRlUUpQeW1iSnp5YmVtaUNIQk1oclY3c1ByYlFjSVdEUQp4RlByQ1hvUzZpY0Q3Z0c2SnViWHlqSE55Vit4Q1d4UWxhcVhtcThQTDNpSVlScDVkazlIR28vNHhQK1NSaUp4Ck91NjRINTdibUlGZXFGeVF4b0FvM2E5eUY2OGhUdW5pcXJETW11Nmw2anNaOU1ZUDdUYkF4Wk9ZdGYrcE5DaWsKYjlZSW0xUTFHRS9IbmNGN1Y4RFZzVEREbXlmOGpHNSs2MjdQYWpLeE9ldm93RFpYb3RMRVd3L05WSVcxeDNZZApPcTlicGpEWlhjT3ZIK0RPSWJPMzQvNFp2SFRQampTSGRMaWpSa29tN2owRDRVSFRUMEZmeThKQWorUXFaS21qClRES2VmRHpNU0QrRUYrZDl2Wi9BN1lxK1VVZ1U5MU95ZGxnSEpiUEp6MkQ0NUhab0k3clk3Z04vMjUxeTF6QnUKMHZVWmdtN1VZYlZTN3ROSkRDN1NuZ2pFSkpXTmdXV0JNcm9wcmVMZm9BSkM3UHNCMDhSMlVQclo1U3BDTVFPcQplRVErcjRrRDdCTi9uRmVJV3lHdTdLVjJuOEs3ZUN5K3gxVldML2xDSzRSTDdubisKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
# Source: joylive-webhook/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: joylive-webhook-config
  namespace: joylive
data:
  bootstrap.properties: |
    app.name=${APPLICATION_NAME}
    app.service.name=${APPLICATION_SERVICE_NAME:${APPLICATION_NAME}}
    app.service.gateway=${APPLICATION_SERVICE_GATEWAY:NONE}
    app.location.region=${APPLICATION_LOCATION_REGION}
    app.location.zone=${APPLICATION_LOCATION_ZONE}
    app.location.liveSpaceId=${APPLICATION_LOCATION_LIVESPACE_ID:${CONFIG_LIVESPACE_ID}}
    app.location.unit=${APPLICATION_LOCATION_UNIT}
    app.location.cell=${APPLICATION_LOCATION_CELL}
    app.location.laneSpaceId=${APPLICATION_LOCATION_LANESPACE_ID}
    app.location.lane=${APPLICATION_LOCATION_LANE}
    agent.enhance.shutdownOnError=${CONFIG_ENHANCE_SHUTDOWN_ON_ERROR:true}
    classloader.contextLoaderEnabled=${CLASSLOADER_CONTEXT_LOADER_ENABLED:true}
    classloader.core.configExtensions=yaml,yml,xml,json,properties
    #classloader.core.parentResources=
    classloader.core.parentPrefixes=com.jd.live.agent.bootstrap,java.,javax.,sun.
    #classloader.core.isolationResources=
    classloader.core.isolationPrefixes=META-INF/services/com.jd.live.agent
    #classloader.coreImpl.parentResources=
    classloader.coreImpl.parentPrefixes=com.jd.live.agent.bootstrap.,com.jd.live.agent.core.,com.jd.live.agent.governance.,java.,javax.,sun.
    classloader.coreImpl.isolationResources=
    classloader.coreImpl.isolationPrefixes=
    #classloader.plugin.parentResources=
    classloader.plugin.parentPrefixes=com.jd.live.agent.bootstrap.,com.jd.live.agent.core.,com.jd.live.agent.governance.,java.,javax.,sun.
    #classloader.plugin.isolationResources=
    #classloader.plugin.isolationPrefixes=
  config.yaml: |
    agent:
      enhance:
        javaVersion: '[,1.8);[1.8.0_60,]'
        retransformEnabled: true
        loggerEnabled: true
        exporterEnabled: false
        excludePrefixes: null
        excludeTypes: null
        excludeInterfaces: null
        excludeClassLoaders:
          - com.jd.jr.sgm.agent.loader.ClientLibClassLoader
          - com.jd.pfinder.profiler.load.InterceptorClassLoader
          - com.jd.pfinder.profiler.utils.ModuleClassLoader
          - com.jd.pfinder.profiler.load.ModuleInterceptorClassLoader
          - io.opentelemetry.javaagent.bootstrap.AgentClassLoader
          - org.apache.skywalking.apm.agent.core.plugin.loader.AgentClassLoader
          - org.apache.skywalking.apm.agent.core.plugin.loader.PluginClassLoader
          - com.navercorp.pinpoint.bootstrap.classloader.AgentClassLoader
          - com.navercorp.pinpoint.bootstrap.classloader.PluginClassLoader
          - com.huaweicloud.sermant.core.classloader.FrameworkClassLoader
          - com.huaweicloud.sermant.core.plugin.classloader.PluginClassLoader
          - com.huaweicloud.sermant.core.plugin.classloader.ServiceClassLoader
          - com.alipay.sofa.ark.container.service.classloader.PluginClassLoader
      publisher:
        liveEvent:
          capacity: 20000
      plugin:
        systems:
          - system
        statics:
          - dubbo
          - grpc
          - httpclient
          - jdk
          - jmq
          - jsf
          - kafka
          - okhttp
          - netty
          - phevos
          - rocketmq
          - shenyu
          - sofarpc
          - spring
          - mariadb
          - mongodb
          - opengauss
          - postgresql
          - redis
        disables: null
        dynamics: null
        passives: null
        profiles:
          test: null
          production: null
        profile: null
      sync:
        liveSpace:
          url: http://127.0.0.1:30305/v1
          spacesUrl: http://127.0.0.1:30305/v1/workspaces
          spaceUrl: http://127.0.0.1:30305/v1/workspaces/${space_id}/version/${space_version}
          serviceUrl: http://127.0.0.1:30305/v1/services/${service_name}/version/${service_version}
          type: multilive # [file,multilive]
          service: true
          interval: 5000
          timeout: 3000
          initialTimeout: 20000
          delay: 0
          fault: 5000
          headers:
            x-jdcloud-pin: amRhcA==
        laneSpace:
          type: file
        microservice:
          type: file
          policy: FLOW_CONTROL
      watchdog:
        enabled: true
        delay: 5000
        interval: 100
        timeout: 5000
      switch:
        live:
          enabled: ${CONFIG_LIVE_ENABLED:true}
          dubbo: true
          sofarpc: true
          jsf: true
          spring: true
          phevos: true
        lane:
          enabled: ${CONFIG_LANE_ENABLED:true}
        transmission:
          enabled: ${CONFIG_TRANSMISSION_ENABLED:true}
          threadpool: ${CONFIG_TRANSMISSION_THREADPOOL_ENABLED:true}
        registry:
          enabled: ${CONFIG_REGISTRY_ENABLED:true}
        flowcontrol:
          enabled: ${CONFIG_FLOW_CONTROL_ENABLED:true}
          loadbalance: ${CONFIG_LOADBALANCE_ENABLED:true}
          sticky: ${CONFIG_STICKY_ENABLED:false}
          limit: ${CONFIG_LIMIT_ENABLED:true}
          localhost: ${CONFIG_LOCALHOST_ENABLED:false}
          virtual: ${CONFIG_VIRTUAL_ENABLED:false}
        protect:
          enabled: ${CONFIG_PROTECT_ENABLED:false}
          mariadb: true
          postgresql: true
          opengauss: true
          mongodb: true
          redis: false
        classloader:
          enabled: ${CONFIG_CLASSLOADER_ENABLED:true}
          springboot: true
        counter:
          enabled: true
      governance:
        service:
          warmups: ${CONFIG_WARMUP_SERVICES:}
        initializeTimeout: ${CONFIG_POLICY_INITIALIZE_TIMEOUT:10000}
        router:
          virtual: ${CONFIG_VIRTUAL_SIZE:500}
          phevos:
            groupExpression: ${unit}-${cell}-${group}
        transmission:
          thread:
            excludeExecutors:
              - org.apache.dubbo.common.threadpool.ThreadlessExecutor
              - org.apache.tomcat.util.threads.ThreadPoolExecutor
              - org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor
              - org.apache.tomcat.util.threads.InlineExecutorService
              - javax.management.NotificationBroadcasterSupport$1
              - io.grpc.stub.ClientCalls.ThreadlessExecutor
              - io.grpc.SynchronizationContext
              - io.netty.channel.MultithreadEventLoopGroup
              - io.netty.channel.nio.NioEventLoop
              - io.netty.channel.SingleThreadEventLoop
              - io.netty.channel.kqueue.KQueueEventLoopGroup
              - io.netty.channel.kqueue.KQueueEventLoop
              - io.netty.util.concurrent.MultithreadEventExecutorGroup
              - io.netty.util.concurrent.AbstractEventExecutorGroup
              - io.netty.util.concurrent.ThreadPerTaskExecutor
              - io.netty.util.concurrent.GlobalEventExecutor
              - io.netty.util.concurrent.AbstractScheduledEventExecutor
              - io.netty.util.concurrent.AbstractEventExecutor
              - io.netty.util.concurrent.DefaultEventExecutor
              - io.netty.util.concurrent.SingleThreadEventExecutor
              - io.netty.util.internal.ThreadExecutorMap$1
              - reactor.core.scheduler.BoundedElasticScheduler$BoundedScheduledExecutorService
              - reactor.netty.resources.ColocatedEventLoopGroup
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoopGroup
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.MultithreadEventLoopGroup
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.MultithreadEventExecutorGroup
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractEventExecutorGroup
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.ThreadPerTaskExecutor
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.GlobalEventExecutor
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractScheduledEventExecutor
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractEventExecutor
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.SingleThreadEventLoop
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor
              - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$1
              - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$ExecutorHolder
              - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor
              - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$2
              - com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor
              - com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls.ThreadlessExecutor
              - com.alibaba.nacos.shaded.io.grpc.SynchronizationContext
              - com.alibaba.nacos.shaded.com.google.common.util.concurrent.DirectExecutor
            excludeTasks:
              - com.alibaba.nacos.shaded.io.grpc.internal.DnsNameResolver.Resolve
              - sun.rmi.transport.tcp.TCPTransport$ConnectionHandler
              - sun.rmi.transport.DGCImpl$1
              - sun.rmi.transport.DGCAckHandler$1
              - com.alibaba.nacos.client.naming.backups.FailoverReactor$DiskFileWriter
              - com.alibaba.nacos.client.naming.backups.FailoverReactor.SwitchRefresher
              - com.alibaba.nacos.client.auth.ram.identify.CredentialWatcher$1
              - com.alibaba.nacos.client.naming.remote.gprc.redo.RedoScheduledTask
              - com.alibaba.nacos.shaded.io.grpc.internal.DnsNameResolver$Resolve
              - com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientTransport$5
              - com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor
              - com.alibaba.nacos.shaded.io.grpc.internal.LogExceptionRunnable
            excludeTaskPrefixes:
              - reactor.core.scheduler.BoundedElasticScheduler$$Lambda
              - org.springframework.cloud.commons.util.InetUtils$$Lambda$
              - com.alibaba.nacos.client.naming.backups.FailoverReactor$$Lambda$
              - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate$$Lambda$
              - com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$
      counter:
        gateway: true
        service: true
        readerInterval: 1000
        exporter:
          type: ${CONFIG_COUNTER_EXPORTER_TYPE:otlp.grpc}
          endpoint: ${CONFIG_COUNTER_EXPORTER_ENDPOINT:http://otel-collector.otel.svc:4317}
          timeout: 5000
    
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration scan="true" debug="false">
        <statusListener class="com.jd.live.agent.shaded.ch.qos.logback.core.status.NopStatusListener"/>
    
        <conversionRule conversionWord="clr"
                        converterClass="com.jd.live.agent.implement.logger.slf4j.logback.ColorConverter"/>
        <conversionRule conversionWord="wex"
                        converterClass="com.jd.live.agent.implement.logger.slf4j.logback.WhitespaceThrowableProxyConverter"/>
        <conversionRule conversionWord="wEx"
                        converterClass="com.jd.live.agent.implement.logger.slf4j.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    
        <property name="LIVE_LOG_CONSOLE_PATTERN"
                  value="${LIVE_LOG_CONSOLE_PATTERN:-%clr(%d{${LIVE_LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LIVE_LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){red} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LIVE_LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
        <property name="LIVE_LOG_CONSOLE_CHARSET" value="${LIVE_LOG_CONSOLE_CHARSET:-${file.encoding:-UTF-8}}"/>
        <property name="LIVE_LOG_FILE_PATTERN"
                  value="${LIVE_LOG_FILE_PATTERN:-%d{${LIVE_LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LIVE_LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LIVE_LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
        <property name="LIVE_LOG_FILE_CHARSET" value="${LIVE_LOG_FILE_CHARSET:-${file.encoding:-UTF-8}}"/>
    
        <property scope="context" name="logger.dir" value="${LIVE_LOG_DIR:-./logs/live-agent/}"/>
        <property scope="context" name="logger.application" value="${LIVE_APP_NAME:-live-agent}"/>
        <property scope="context" name="logger.level" value="${LIVE_LOG_LEVEL:-info}"/>
        <property scope="context" name="logger.totalSize" value="${LIVE_LOG_TOTAL_SIZE:-20GB}"/>
        <property scope="context" name="logger.maxHistory" value="${LIVE_LOG_MAX_HISTORY:-10}"/>
        <property scope="context" name="logger.maxFileSize" value="${LIVE_LOG_MAX_SIZE:-10MB}"/>
        <property scope="context" name="logger.cleanHistoryOnStart" value="${LIVE_LOG_CLEAN_HISTORY_ONSTART:-true}"/>
    
        <appender name="CONSOLE_APPENDER" class="com.jd.live.agent.shaded.ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>
                    ${LIVE_LOG_CONSOLE_PATTERN}
                </pattern>
            </encoder>
        </appender>
    
        <appender name="ROLLING_APPENDER" class="com.jd.live.agent.shaded.ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="com.jd.live.agent.shaded.ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${logger.dir}/%d{yyyy-MM-dd}/${logger.application}-%i.log</fileNamePattern>
                <maxHistory>${logger.maxHistory}</maxHistory>
                <maxFileSize>${logger.maxFileSize}</maxFileSize>
                <totalSizeCap>${logger.totalSize}</totalSizeCap>
                <cleanHistoryOnStart>${logger.cleanHistoryOnStart}</cleanHistoryOnStart>
            </rollingPolicy>
            <filter class="com.jd.live.agent.shaded.ch.qos.logback.classic.filter.ThresholdFilter">
                <level>INFO</level>
            </filter>
            <encoder>
                <pattern>
                    ${LIVE_LOG_FILE_PATTERN}
                </pattern>
            </encoder>
        </appender>
    
        <root>
            <level value="${logger.level}"/>
            <appender-ref ref="CONSOLE_APPENDER"/>
            <appender-ref ref="ROLLING_APPENDER"/>
        </root>
    
    </configuration>
---
# Source: joylive-webhook/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: joylive-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - events
      - configmaps
      - namespaces
    verbs:
      - "*"
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - "*"
  - apiGroups:
      - autoscaling
    resources:
      - '*'
    verbs:
      - '*'
---
# Source: joylive-webhook/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: joylive-webhook
  namespace:  joylive
subjects:
  - kind: ServiceAccount
    name: joylive-webhook
    namespace:  joylive
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: joylive-webhook
---
# Source: joylive-webhook/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: joylive-webhook
  namespace: joylive
  labels:
    svc: joylive-webhook
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    app: joylive-webhook
---
# Source: joylive-webhook/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: joylive-webhook
  namespace: joylive
  labels:
    app: joylive-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: joylive-webhook
  template:
    metadata:
      labels:
        app: joylive-webhook
    spec:
      serviceAccountName: joylive-webhook
      containers:
        - env:
            - name: log.level
              value: debug
          name: joylive-injector
          image: ghcr.io/jd-opensource/joylive-injector:1.0.0
          imagePullPolicy: IfNotPresent
          args:
            - --cert=/etc/kubernetes/ssl/dac.pem
            - --key=/etc/kubernetes/ssl/dac-key.pem
            - --init-container-image=ghcr.io/jd-opensource/joylive-agent:1.0.0
          livenessProbe:
            httpGet:
              scheme: HTTPS
              port: 443
              path: /livez
            periodSeconds: 10
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: 443
              path: /readyz
            periodSeconds: 10
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /etc/kubernetes/ssl/
              name: dynamic-admission-control-certs
              readOnly: true
            - mountPath: /etc/config.yaml
              name: joylive-webhook-config
              subPath: config.yaml
            - mountPath: /etc/bootstrap.properties
              name: joylive-webhook-config
              subPath: bootstrap.properties
            - mountPath: /etc/logback.xml
              name: joylive-webhook-config
              subPath: logback.xml
      volumes:
        - name: dynamic-admission-control-certs
          secret:
            secretName: dynamic-admission-control-certs
        - configMap:
            items:
            - key: config.yaml
              path: config.yaml
            - key: bootstrap.properties
              path: bootstrap.properties
            - key: logback.xml
              path: logback.xml
            name: joylive-webhook-config
          name: joylive-webhook-config
---
# Source: joylive-webhook/templates/mutatingwebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "joylive-webhook"
  namespace: joylive
webhooks:
  - name: "joylive-webhook-deployment.joylive.io"
    rules:
      - apiGroups:   ["apps"]
        apiVersions: ["v1","v1beta1"]
        operations:  ["CREATE","UPDATE","DELETE"]
        resources:   ["deployments"]
        #scope:       "Namespaced"
        #scope:       "Cluster"
    clientConfig:
      service:
        name: "joylive-webhook"
        namespace: joylive
        path: /mutating/injection-deploy
        port: 443
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdKRENDQkF5Z0F3SUJBZ0lVUSthU1B5YWphcjd4UUJEOTVvYVNOZTE5Z0k0d0RRWUpLb1pJaHZjTkFRRU4KQlFBd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuTVJBd0RnWURWUVFIRXdkQwpaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkRiMjUwY205c01Tc3dLUVlEClZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeWFYUjVNU1V3SXdZRFZRUUQKRXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1CNFhEVEkwTURReU5qQXdOVGt3TUZvWApEVE0wTURReU5EQXdOVGt3TUZvd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuCk1SQXdEZ1lEVlFRSEV3ZENaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkQKYjI1MGNtOXNNU3N3S1FZRFZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeQphWFI1TVNVd0l3WURWUVFERXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXBSQUNia0doQTNHMytrWVdhcUN6UFhSZkVCODkKRHRFc0ZlTW9Wa0pQOHdMamZJT1g0aUE0enhaVmp4cTVvOSt4ZGdKQnRheXcwNk5SbEtkVUFyRkRLY3FLQkwwNgo3eVlhTXdXTk5ybE5PYnJOeE5MVFJ1VFB2VzdySHN5NUNzbm9uNFI2dTFkK0ZLckgzdytrT0xUa3A4c0xxRlR4CnBUMElNSmN6STMzUjhsaGU1S2hzbEFkOThld2Z1RWlrOFJHZ0ZlSFdtcit5YmE5WCt0VXBYMHVSWFVFeXZNdFIKZjh6Ujk1dy9tbDN6TTBCbWJmUWlWNmdtY0J0azFWYnBvcVJndjlqTThMYS81MVpGaElwVVJOaWloMDc4QXJNMgovWXpndWNMWGtXcHJGSU5Ta1ZSNWg4cE9TR2VPTjJRZjk0ZlBIZXRySG51U1B1OGJvazRtSTdRd3ZTWVJMV21JClB1YzVhNDRSempnYlRLOGVRcTNrTFlESTZNQVA5R0Y0SE1tZVhxNmpFTmo0YXB1RW42V0l0THpnbmtnWCtwUmwKcWdQMVh0UXlOS01PcWtUNjFVbC9wUFhQdTUwbS82SDhJaldYemlRQXZDbnE1elhQOHkzZEM2dkhYWU15NUNEZApDTXZRVUJPa2tzV1pyZVRKWEMwcDB5N292amN5ZkRsVzRkcUZNMjR5T25xUHA5QnEwSHV5MHFZaUtEdVFRUG9pCjBVbFdsb1VyMDFINXdXdk5IZy9QcjJvMWJjMDVpMzBKc1ZtZk5DbmNRR0UvL09WODNvdS92YlM2TGhyUExwMmYKS21xclNTKzFITXo1V0t3bW5XNE5BSEdjaG01UzE3U2dKbXdkK3lqRzlGbzlrRmlYeC9kcnZaWG90c05ybUg5aApjdFdkMk1GSk9XZE9wS2NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGCk1BTUJBZjh3SFFZRFZSME9CQllFRkErVXdYbU16YzVWMlNqdmxPZGZIYkNKSEtpOE1BMEdDU3FHU0liM0RRRUIKRFFVQUE0SUNBUUJEU3ZqRStJdEwyWURINE1nelNxQ0llVnVNUVp6eWhWQmkyNzlOSisvaUVmMVZiQ0NRV1AxdApIVmNkMFZlYlA5cllsNms1NUZvK25tanllVkpNQ25zTnN4dDF3cWh0dkxlZWRMcTFCbkVXY2NZbWRRc3M3Tmk2CkQ4Tmc0SisrOENObktXR096L21xZStEdkxqZGltSWpmRy9TQWtWbEVnNGFabmdaUENTL0Q0R3N3bkRpb3dFQWMKcmVHVnIzemJRKzFPOTZWOHlzRDdIckdVWmhTcEZXeUVMRlUrNHBLdDRqdm9WdmcyTlZJcTNEdEp0eTFrZktRNwp5WVB6dXFQd0tIdlE2YmVodkkvRDVoMkw4NzR1WmNmeU5HSzY2YWg2YTY3Z09tUitzQmtqblZUUkgwVmlXRmxkCkhOeWg3N1FUdGsxcEdjVnJBRHk0MmhBZHh1cEp0RmlEZVQvZ0N2WXM2Q0YyRG1Gbmx4VTBCa2RnbWRMOERnZ3cKRXIxV1o4SjZ6Mzl6YmM3STRMY2tWZm9MZzltVWUya1ZhN0lMcklBOVVWL2srMWkycm9xemxJcWlUUTJiNEtaawpkRmd5REYwUVh5Sk1NSFVhNDczVjI0SHRPUW41MDFWUFZ0Ym5lL2lyYjFTeFJwTUt5MTBlcmlBR3R3V21mUFc5CmVBVmo4YkhjZ0x0bzVqZVpwTmx6Y3dDcEpLaHh1T2VPUFR0bUZOTC9mOGlrTjFoTVRwWHVxVllJejMxQWVPeDUKZ1ZzaG81QTZ4NFpIcnZuRGwzYVNKVlFNVlJUOXRwQ3NLS2lON0FiYUkwMXRyZnIyaktqZlA1dHJTM2pab2VrbQp6S3ZCajhUaUc2VXBVSTFnQ3RKQjcrME9aSjU3dkFXT3RJb01wRXFtZXRYUC94bGg0RXIxY1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
    failurePolicy: Ignore
    objectSelector:
      matchLabels:
        x-live-enabled : "true"
  - name: "joylive-webhook-pod.joylive.io"
    rules:
      - apiGroups: [ "" ]
        apiVersions: [ "v1","v1beta1" ]
        operations: [ "CREATE" ]
        resources: [ "pods" ]
        scope:       "*"
        #scope:       "Cluster"
    clientConfig:
      service:
        name: "joylive-webhook"
        namespace: joylive
        path: /mutating/injection-pod
        port: 443
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdKRENDQkF5Z0F3SUJBZ0lVUSthU1B5YWphcjd4UUJEOTVvYVNOZTE5Z0k0d0RRWUpLb1pJaHZjTkFRRU4KQlFBd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuTVJBd0RnWURWUVFIRXdkQwpaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkRiMjUwY205c01Tc3dLUVlEClZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeWFYUjVNU1V3SXdZRFZRUUQKRXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1CNFhEVEkwTURReU5qQXdOVGt3TUZvWApEVE0wTURReU5EQXdOVGt3TUZvd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuCk1SQXdEZ1lEVlFRSEV3ZENaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkQKYjI1MGNtOXNNU3N3S1FZRFZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeQphWFI1TVNVd0l3WURWUVFERXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXBSQUNia0doQTNHMytrWVdhcUN6UFhSZkVCODkKRHRFc0ZlTW9Wa0pQOHdMamZJT1g0aUE0enhaVmp4cTVvOSt4ZGdKQnRheXcwNk5SbEtkVUFyRkRLY3FLQkwwNgo3eVlhTXdXTk5ybE5PYnJOeE5MVFJ1VFB2VzdySHN5NUNzbm9uNFI2dTFkK0ZLckgzdytrT0xUa3A4c0xxRlR4CnBUMElNSmN6STMzUjhsaGU1S2hzbEFkOThld2Z1RWlrOFJHZ0ZlSFdtcit5YmE5WCt0VXBYMHVSWFVFeXZNdFIKZjh6Ujk1dy9tbDN6TTBCbWJmUWlWNmdtY0J0azFWYnBvcVJndjlqTThMYS81MVpGaElwVVJOaWloMDc4QXJNMgovWXpndWNMWGtXcHJGSU5Ta1ZSNWg4cE9TR2VPTjJRZjk0ZlBIZXRySG51U1B1OGJvazRtSTdRd3ZTWVJMV21JClB1YzVhNDRSempnYlRLOGVRcTNrTFlESTZNQVA5R0Y0SE1tZVhxNmpFTmo0YXB1RW42V0l0THpnbmtnWCtwUmwKcWdQMVh0UXlOS01PcWtUNjFVbC9wUFhQdTUwbS82SDhJaldYemlRQXZDbnE1elhQOHkzZEM2dkhYWU15NUNEZApDTXZRVUJPa2tzV1pyZVRKWEMwcDB5N292amN5ZkRsVzRkcUZNMjR5T25xUHA5QnEwSHV5MHFZaUtEdVFRUG9pCjBVbFdsb1VyMDFINXdXdk5IZy9QcjJvMWJjMDVpMzBKc1ZtZk5DbmNRR0UvL09WODNvdS92YlM2TGhyUExwMmYKS21xclNTKzFITXo1V0t3bW5XNE5BSEdjaG01UzE3U2dKbXdkK3lqRzlGbzlrRmlYeC9kcnZaWG90c05ybUg5aApjdFdkMk1GSk9XZE9wS2NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGCk1BTUJBZjh3SFFZRFZSME9CQllFRkErVXdYbU16YzVWMlNqdmxPZGZIYkNKSEtpOE1BMEdDU3FHU0liM0RRRUIKRFFVQUE0SUNBUUJEU3ZqRStJdEwyWURINE1nelNxQ0llVnVNUVp6eWhWQmkyNzlOSisvaUVmMVZiQ0NRV1AxdApIVmNkMFZlYlA5cllsNms1NUZvK25tanllVkpNQ25zTnN4dDF3cWh0dkxlZWRMcTFCbkVXY2NZbWRRc3M3Tmk2CkQ4Tmc0SisrOENObktXR096L21xZStEdkxqZGltSWpmRy9TQWtWbEVnNGFabmdaUENTL0Q0R3N3bkRpb3dFQWMKcmVHVnIzemJRKzFPOTZWOHlzRDdIckdVWmhTcEZXeUVMRlUrNHBLdDRqdm9WdmcyTlZJcTNEdEp0eTFrZktRNwp5WVB6dXFQd0tIdlE2YmVodkkvRDVoMkw4NzR1WmNmeU5HSzY2YWg2YTY3Z09tUitzQmtqblZUUkgwVmlXRmxkCkhOeWg3N1FUdGsxcEdjVnJBRHk0MmhBZHh1cEp0RmlEZVQvZ0N2WXM2Q0YyRG1Gbmx4VTBCa2RnbWRMOERnZ3cKRXIxV1o4SjZ6Mzl6YmM3STRMY2tWZm9MZzltVWUya1ZhN0lMcklBOVVWL2srMWkycm9xemxJcWlUUTJiNEtaawpkRmd5REYwUVh5Sk1NSFVhNDczVjI0SHRPUW41MDFWUFZ0Ym5lL2lyYjFTeFJwTUt5MTBlcmlBR3R3V21mUFc5CmVBVmo4YkhjZ0x0bzVqZVpwTmx6Y3dDcEpLaHh1T2VPUFR0bUZOTC9mOGlrTjFoTVRwWHVxVllJejMxQWVPeDUKZ1ZzaG81QTZ4NFpIcnZuRGwzYVNKVlFNVlJUOXRwQ3NLS2lON0FiYUkwMXRyZnIyaktqZlA1dHJTM2pab2VrbQp6S3ZCajhUaUc2VXBVSTFnQ3RKQjcrME9aSjU3dkFXT3RJb01wRXFtZXRYUC94bGg0RXIxY1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    admissionReviewVersions: [ "v1", "v1beta1" ]
    sideEffects: None
    timeoutSeconds: 5
    failurePolicy: Ignore
    objectSelector:
      matchLabels:
        x-live-enabled : "true"
