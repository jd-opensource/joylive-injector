---
# Source: joylive-injector/crds/injector.joylive.io_agentversions.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: agentversions.injector.joylive.io
spec:
  group: injector.joylive.io
  names:
    kind: AgentVersion
    listKind: AgentVersionList
    plural: agentversions
    singular: agentversion
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AgentVersion is the Schema for the agentversions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AgentVersionSpec defines the desired state of AgentVersion
            properties:
              configMapName:
                description: ConfigMapName record storage version configuration file
                type: string
              enable:
                description: Enable indicates whether this version is enabled
                type: boolean
              version:
                description: Version of JoyLive Agent release
                type: string
            required:
            - enable
            - version
            type: object
          status:
            description: AgentVersionStatus defines the observed state of AgentVersion
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: joylive-injector/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: joylive-injector
  namespace: joylive
---
# Source: joylive-injector/templates/secret.yaml
apiVersion: v1
type: Opaque
kind: Secret
metadata:
  name: dynamic-admission-control-certs
  namespace: joylive
data:
  dac-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc3IvZ1VkcktlbjlINGYrY2lTeUJ3ZmU1SlZqL1hvV2M4SzZUM3lWNGNPd0pnTWxrCk8wL25WVWRKdm1lREF1SEpQQ1J4azErcWJ2K293RVV2SlpUNDRDWHVBL1R6OGwyRFZEM21nRGQ0WmN6QWdDc1gKWDhJVXUzTUtTd0hQN1JIWG1Nb0wyYmpGOFZ0aTNvdCtTNExkcFpLYVJpclVPOHI0dVRDendLbVUyLzZxSmk1cwp1U1prenFQRTlWdi9sbHBQN0doSG8wcnJxNTl1MVNHSW85b1EvLzVWL292SFpuYkpBVU9PaE5YVmtGMHl3Q2xDCnA5RHQ3MkI1UndDS3BlRDVkZU5tSUtWRTl4U1YzMEcwdzBTVnRXTFhCN3dWRXFOdE5oajBXMUFIODJwY1BmOGcKSEtkcE5MWW43SG1nTk1paFQ0anlPTmlKQk9kaGNaVGVwQ1R3S1FJREFRQUJBb0lCQUVidUtQK1NTSUt2ZTBETgpBN3JUTkhKWjhOaEhKcDdGZW05dmR6STNWa0hKQ0VSWXBqTjdFNXNkZkwvWHAzOC9SWEZlTE11RVRNZGJJQVdiCjdvZUZRL1QrV0NLdDB4ZTd6OTlmNk5XOExVU0lLV015dGtYRGFDS3lGY1dKNUk1NFpBczNNZGlsbjdhVXd2ajQKZFpkVlNNcnBEOXNFSjgvS1RVUi9kUFRnMWpjdGYwbGFseUZNaUhDZDBHTDNxRHBhRFp4bk8vMXgwK3dXWE5zTQpja2c4S1A4elFDRHhrTVBjczJaL0NyaTFLT2tkeVB0WDVmdCtxZmp1TzBDMENXZHVWQ25Ha05zS2lQL01xdFB3CkdqSTNiaXo1MVZHRml4VkROcUFhei9BZjlIbjVKdndqNEIxeDgwRW5hWVd3Z2Zjb3pMNXhHa1M4clNpbUU2cWMKbDBUa0ltRUNnWUVBemxZdll3YWJpVUJzaGJVd1NOSzROL25BNkZ3STlHL3FRMk9jZHAvcjVaTmZQOWdaaEtqagpSYTEyRXJ4ZWJYOStIaXp2amRmVUdNdCtZSGowRDU0cnRFYlVQQzdOUm9FdUllWSt4WUJLM2xnbUxPTmNtL0MwCnkxMjVVaEhOV2ZXcHZZNTJOMUNVaVcvTlpXZTlmN0RGRnBxK2NCTTFqK2k1M0hwWFd1bGZDTDBDZ1lFQTNjWGIKdHBpeUdSR0gyOHpSMk9JTVNpcTNXdEo5eUkzcnhqYjVxdnVKL0hTaHhVcG1NZW5DeFZrc1RyaGgrR1RwWUVoNwpaQzFtVXlwZ3pqZnF0d3NzL3R1c285cnU0L1VnTmZORjdrWXJKZnhhZUJBUS9lWWVLTm5XQkJzK3lsS1hOUUk4CkVNVWZrTm1KRWhYcGdyM0FJY0laK3h3M2NJWGprYTFqa25zV3lkMENnWUIxT2ozOTh0a1hKNFVBaWlwK2xVbVkKYzhzSHVKSlYzZWVvbGNWbEdBSzhFZmlCbTFNVUxhZkNCSVVhcSs2eUkwY1IrZEc0TXJFTHpVRmxxaEp2ZFJ1NwpkcXBKN3dVdFUyTlVXeTI2bytMbFpBdDhZVWhTU0hWUFBWWjJyQ3FSTzZOT1VNd1ZMVERXekxCVE5wZFJIcXM2CjVudmZ6T29YY3M5MTFnUWZZSXRmdVFLQmdENnVQSEk0YUNYenNYMXJQMmhZUTNiMjZjbk9zbVJyMEZhK2xRUkIKZ2ZlTGsybHFwTVc0dHljR0ZDTFB0RWo3WklhbEZkTHpqZmMxaEJUazh2NzNOcWwxdHk2OG8wWmtzc3pzekRnVApOd0RPZVZkejJ3bVg3N0JHR1ZvaHhUWno3MjY1Q2ZjSGIrdUZ3RnNQUEdlS2IvSmFwUE0zUDJnYlAzMmVEd1dJCnFxRTFBb0dCQUlVL3dIRUxMWTlXQ0xQRzZDc0tvNlVIQkQ2RUF2c2RORkw3N3JvSkV4cHdTTExsN0JXYk5PdUkKL00zc1FwMDAxclhyVHVGOFZXR1VidkpVbUk0cGZ6OFEyUmRuOEUyNHJRQWhLZVZveHQ4R1dJU3E0Si96UlRJNQpqYmI2NU1pdnFDdUdqcGtpbUxqS2N3b0ZTSkVqTE9nTW5DSDFPR3hvbUo3c0NrTGNZbFlBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  dac.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdJekNDQkF1Z0F3SUJBZ0lVRklrYUx0V2hvQk9WZ2xOT1hCUGFEdUFSOXIwd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuTVJBd0RnWURWUVFIRXdkQwpaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkRiMjUwY205c01Tc3dLUVlEClZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeWFYUjVNU1V3SXdZRFZRUUQKRXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1CNFhEVEkwTURZeE1qQTRNekV3TUZvWApEVE0wTURZeE1EQTRNekV3TUZvd2dhWXhDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuCk1SQXdEZ1lEVlFRSEV3ZENaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkQKYjI1MGNtOXNNU3N3S1FZRFZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeQphWFI1TVNJd0lBWURWUVFERXhsRWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBc3IvZ1VkcktlbjlINGYrY2lTeUJ3ZmU1SlZqL1hvV2MKOEs2VDN5VjRjT3dKZ01sa08wL25WVWRKdm1lREF1SEpQQ1J4azErcWJ2K293RVV2SlpUNDRDWHVBL1R6OGwyRApWRDNtZ0RkNFpjekFnQ3NYWDhJVXUzTUtTd0hQN1JIWG1Nb0wyYmpGOFZ0aTNvdCtTNExkcFpLYVJpclVPOHI0CnVUQ3p3S21VMi82cUppNXN1U1prenFQRTlWdi9sbHBQN0doSG8wcnJxNTl1MVNHSW85b1EvLzVWL292SFpuYkoKQVVPT2hOWFZrRjB5d0NsQ3A5RHQ3MkI1UndDS3BlRDVkZU5tSUtWRTl4U1YzMEcwdzBTVnRXTFhCN3dWRXFOdApOaGowVzFBSDgycGNQZjhnSEtkcE5MWW43SG1nTk1paFQ0anlPTmlKQk9kaGNaVGVwQ1R3S1FJREFRQUJvNElCClFqQ0NBVDR3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJReXV0cElvNkFpYWltYU1ZT21pQmhWbk9jWQpSVEFmQmdOVkhTTUVHREFXZ0JRY1VKWStsZHRMdXlJZWhCZEV5dS90YTJSL3VqQ0J2Z1lEVlIwUkJJRzJNSUd6CmdnbHNiMk5oYkdodmMzU0NFR3B2ZVd4cGRtVXRhVzVxWldOMGIzS0NHR3B2ZVd4cGRtVXRhVzVxWldOMGIzSXUKYW05NWJHbDJaWUljYW05NWJHbDJaUzFwYm1wbFkzUnZjaTVxYjNsc2FYWmxMbk4yWTRJU2RtRnNhV1JoZEdsdQpaeTEzWldKb2IyOXJnaDUyWVd4cFpHRjBhVzVuTFhkbFltaHZiMnN1YTNWaVpTMWhaR1J2Ym5PQ0luWmhiR2xrCllYUnBibWN0ZDJWaWFHOXZheTVyZFdKbExXRmtaRzl1Y3k1emRtT0hCSDhBQUFFd0RRWUpLb1pJaHZjTkFRRU4KQlFBRGdnSUJBR25HbHI2Y2xhZjVPWWYvS2IwbUpWSUxEZEhhcW05R0N5d1F5cisrdDVJeHFnd09QL1l5dlZnUgo5cVBsZXhyaFFHY1hMQTU3cnIvVklsaVFhN3ExRVU4ZDlKZFd6b3V2S1FKY2FZdW9WWEdUWmlKRFlRUmZUOFJjCnZ1Tmh0NUU4VTkyYTlzN2dDTXEzOWRtMnExd2k2RlVwU0dlbFY0SW5ubERXYVYrampjaEZ4ck92MmNiSEFpWGoKQnpzcFlIM3JsZjlDb3lIZkdHNEN4Kyt4TWIxSVBvWlcxdGhxdGZ4amVTaElieXF2WXZWejJlRjFvRWN5akRoWQpmeFEzNEY2YzVtM1BaZmk2emdPVktKc1NmT3R2ellhRC9nM0lOWmhreGtsTWtyMlBVUExRc1lCSi83RkNJMzl1Cnk1Z2E0Q0RzRnQ1VzQvUTVORkVlUENVQUlTWXRmNEpocEowYlJVVmY2Y1BpWHpmcG1XbVBiaFNlNGQ2QldVU3EKUkJxa1FhSkJub2FsemFtSWhiZXpORWdQTzFlSyt5MXNkUVZhTHJrelFJRUZvWHN5MldSaXRRU2pQNWphL2RQZgo5aEl5Wjl5b25yczJtWVFqajBuM3lDRlFkZDd4V2Z3NVhjRFZScXV0dnV6N3lOL0RuN2YvbXltVjZGR0lSd2doClZJLzFxSDZ1N3lJT1ljM1FVR2NyMmdXd1haUlVabVNNb1ZhYVU5TTgwVTJPRXozbDgyR2NWMkEwYlpSQ201UlcKQXpsdzVtejRGVUsvblNnSjNCMTVneG1LVlNZS2cyQ01RZmVxeThjcDRuTXRKZGRocjhOSU1OZGFLUG1JNlM0KwpOSVl5RXN6cWhWUExrMzE0eXNxdUNmUlFuN2oydkdDaE9VSFVoK0VPOFVvVldDZVM1R1RRCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: joylive-injector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: joylive-injector-config
  namespace: joylive
  labels: 
    app.kubernetes.io/name: joylive-injector
    app.kubernetes.io/instance: joylive-injector
    app: joylive-injector
data:
  bootstrap.properties: |
    app.name=${APPLICATION_NAME}
    app.service.name=${APPLICATION_SERVICE_NAME:${CONFIG_NACOS_SERVICE:${APPLICATION_NAME}}}
    app.service.namespace=${APPLICATION_SERVICE_NAMESPACE}
    app.service.group=${APPLICATION_SERVICE_GROUP}
    app.service.catalog=${APPLICATION_SERVICE_CATALOG:${REGISTRY_GROUP:${CONFIG_NACOS_GROUP}}}
    app.service.gateway=${APPLICATION_SERVICE_GATEWAY:NONE}
    app.service.port=${APPLICATION_SERVICE_PORT}
    app.service.weight=${APPLICATION_SERVICE_WEIGHT:100}
    app.service.warmupDuration=${APPLICATION_SERVICE_WARMUP_DURATION}
    app.service.meta=${APPLICATION_SERVICE_META:}
    app.location.cloud=${APPLICATION_LOCATION_CLOUD:}
    app.location.region=${APPLICATION_LOCATION_REGION:}
    app.location.zone=${APPLICATION_LOCATION_ZONE:}
    app.location.cluster=${APPLICATION_LOCATION_CLUSTER:}
    app.location.liveSpaceId=${APPLICATION_LOCATION_LIVESPACE_ID:${CONFIG_LIVESPACE_ID:}}
    app.location.unitRuleId=${APPLICATION_LOCATION_UNIT_RULE_ID}
    app.location.unit=${APPLICATION_LOCATION_UNIT:}
    app.location.cell=${APPLICATION_LOCATION_CELL:${NODE_CELL:}}
    app.location.laneSpaceId=${APPLICATION_LOCATION_LANESPACE_ID:default}
    app.location.lane=${APPLICATION_LOCATION_LANE:base}
    agent.enhance.shutdownOnError=${CONFIG_ENHANCE_SHUTDOWN_ON_ERROR:true}
    agent.enhance.excludeApp=${CONFIG_ENHANCE_EXCLUDE_APPS:com.taobao.arthas.boot.Bootstrap,org.netbeans.Main,com.jdk.JDKVersionHelper,com.tongweb.srv.commons.utils.*}
    classloader.core.config.prefixes=yaml,yml,xml,json,properties
    classloader.core.parent.prefixes=com.jd.live.agent.bootstrap.
    classloader.core.self.prefixes=com.jd.live.agent.core.,com.jd.live.agent.governance.
    classloader.core.isolation.prefixes=META-INF/services/com.jd.live.agent
    classloader.coreImpl.parent.prefixes=com.jd.live.agent.bootstrap.,com.jd.live.agent.core.,com.jd.live.agent.governance.
    classloader.coreImpl.self.prefixes=com.jd.live.agent.implement.,com.jd.live.agent.shaded.
    classloader.plugin.parent.prefixes=com.jd.live.agent.bootstrap.,com.jd.live.agent.core.,com.jd.live.agent.governance.
    classloader.plugin.self.prefixes=com.jd.live.agent.plugin.
    classloader.essential.inclusion.prefixes=com.jd.live.agent.
    classloader.essential.exclusion.prefixes=com.jd.live.agent.demo.
    classloader.essential.bootstrap.prefixes=com.jd.live.agent.bootstrap.
    cipher.enabled=${CONFIG_CIPHER_ENABLED:false}
    cipher.cipher=${CONFIG_CIPHER_TYPE:StandardPBE}
    cipher.algorithm=${CONFIG_CIPHER_ALGORITHM:PBEWITHHMACSHA512ANDAES_256}
    cipher.provider=${CONFIG_CIPHER_PROVIDER}
    cipher.password=${CONFIG_CIPHER_PASSWORD:${jasypt.encryptor.password}}
    cipher.codec=${CONFIG_CIPHER_CODEC:base64}
    cipher.prefix=${CONFIG_CIPHER_PREFIX:ENC(}
    cipher.suffix=${CONFIG_CIPHER_SUFFIX:)}
    cipher.saltType=${CONFIG_CIPHER_SALT_TYPE:base64}
    cipher.salt=${CONFIG_CIPHER_SALT}
    cipher.saltSize=${CONFIG_CIPHER_SALT_SIZE:16}
    cipher.ivType=${CONFIG_CIPHER_IV_TYPE}
    cipher.iv=${CONFIG_CIPHER_IV}
    cipher.ivSize=${CONFIG_CIPHER_IV_SIZE:16}
    cipher.iterations=${CONFIG_CIPHER_ITERATIONS:1000}
    cipher.properties=${CONFIG_CIPHER_PROPERTIES}
    env.http.url=${CONFIG_ENV_HTTP_URL}
    env.http.parameters=${CONFIG_ENV_HTTP_PARAMETERS}
    
  config.yaml: |
    agent:
      enhance:
        javaVersion: '[,1.8);[1.8.0_60,]'
        retransformEnabled: true
        poolEnabled: true
        loggerEnabled: true
        exporterEnabled: ${CONFIG_ENHANCE_EXPORTER_ENABLED:false}
        excludePrefixes: null
        excludeTypes: null
        excludeClassLoaders:
          - com.jd.jr.sgm.agent.loader.ClientLibClassLoader
          - com.jd.jr.sgm.agent.loader.ClientAppClassLoader
          - com.jd.pfinder.profiler.load.InterceptorClassLoader
          - com.jd.pfinder.profiler.utils.ModuleClassLoader
          - com.jd.pfinder.profiler.load.ModuleInterceptorClassLoader
          - io.opentelemetry.javaagent.bootstrap.AgentClassLoader
          - io.opentelemetry.javaagent.tooling.ExtensionClassLoader
          - org.apache.skywalking.apm.agent.core.plugin.loader.AgentClassLoader
          - org.apache.skywalking.apm.agent.core.plugin.loader.PluginClassLoader
          - com.navercorp.pinpoint.bootstrap.classloader.AgentClassLoader
          - com.navercorp.pinpoint.bootstrap.classloader.PluginClassLoader
          - com.huaweicloud.sermant.core.classloader.FrameworkClassLoader
          - com.huaweicloud.sermant.core.plugin.classloader.PluginClassLoader
          - com.huaweicloud.sermant.core.plugin.classloader.ServiceClassLoader
          - com.alipay.sofa.ark.container.service.classloader.PluginClassLoader
        addOpens:
          com.jd.live.agent.bootstrap.util.type.FieldAccessorFactory:
            - java.util.Map
            - jdk.internal.misc.Unsafe
            - sun.misc.Unsafe
          com.jd.live.agent.governance.invoke.Invocation:
            - java.util.Map
          com.jd.live.agent.core.util.http.HttpUtils:
            - java.net.URI
      timer:
        tickTime: ${CONFIG_TIMER_TICK_TIME:100}
        ticks: ${CONFIG_TIMER_TICKS:512}
        workerThreads: ${CONFIG_TIMER_WORKER_THREADS:4}
      publisher:
        configs:
          traffic:
            capacity: ${CONFIG_TRAFFIC_BUFFER_SIZE:40000}
      plugin:
        systems:
          - system
        statics:
          - eureka
          - polaris
          - nacos
          - spring
          - dubbo
          - sofarpc
          - grpc
          - httpclient
          - okhttp
          - netty
          - jdk
          - jdbc
          - mariadb
          - mysql
          - mongodb
          - opengauss
          - postgresql
          - kafka
          - pulsar
          - rabbitmq
          - redis
          - rocketmq
        disables: null
        dynamics: null
        profiles:
          test: null
          production: null
        profile: null
      sync:
        liveSpace:
          type: ${CONFIG_LIVE_SPACE_API_TYPE:file} # [file,multilive,multilive-openapi,nacos]
          url: ${CONFIG_LIVE_SPACE_API_URL:http://api.live.local:9090/v1}
          service: true
          interval: 3000
          timeout: 3000
          initialTimeout: 20000
          delay: 0
          fault: 5000
          headers: ${CONFIG_LIVE_SPACE_API_HEADERS}
          # for multilive
          multilive:
            spacesUrl: /workspaces
            spaceUrl: /workspaces/${space_id}/version/${space_version}
            serviceUrl: /services/${service_name}/version/${service_version}
            databaseUrl: /workspaces/${space_id}/databases/${database_version}
          # for multilive-openapi
          jdcloud:
            accessKey: ${CONFIG_MULTILIVE_ACCESS_KEY:}
            secretKey: ${CONFIG_MULTILIVE_SECRET_KEY:}
          # for nacos
          nacos:
            username: ${CONFIG_NACOS_USERNAME:nacos}
            password: ${CONFIG_NACOS_PASSWORD:nacos}
            namespace: ${CONFIG_NACOS_NAMESPACE:public}
            liveSpaceGroup: ${CONFIG_NACOS_GROUP_LIVE_SPACE:DEFAULT_GROUP}
            liveSpacesKey: ${CONFIG_NACOS_KEY_LIVE_SPACES:govern-liveSpaces}
            liveSpaceKeyTemplate: ${CONFIG_NACOS_KEY_LIVE_SPACE_TEMPLATE:govern-liveSpace-${id}}
            liveServiceTemplate: ${CONFIG_NACOS_KEY_LIVE_SERVICE_TEMPLATE:govern-liveService-${name}}
            liveDatabaseTemplate: ${CONFIG_NACOS_KEY_LIVE_DATABASE_TEMPLATE:govern-liveDatabase-${id}}
        laneSpace:
          type: ${CONFIG_LANE_SPACE_API_TYPE:file} # [file,jmsf,nacos]
          url: ${CONFIG_LANE_SPACE_API_URL:http://api.jmsf.local:8080/v1}
          interval: 3000
          timeout: 3000
          initialTimeout: 20000
          delay: 0
          fault: 5000
          # for jmsf
          jmsf:
            spacesUrl: /laneSpaces
            spaceUrl: /laneSpace/${space_id}/version/${space_version}
          # for nacos
          nacos:
            username: ${CONFIG_NACOS_USERNAME:nacos}
            password: ${CONFIG_NACOS_PASSWORD:nacos}
            namespace: ${CONFIG_NACOS_NAMESPACE:public}
            laneSpaceGroup: ${CONFIG_NACOS_GROUP_LANE_SPACE:DEFAULT_GROUP}
            laneSpacesKey: ${CONFIG_NACOS_KEY_LANE_SPACES:govern-laneSpaces}
            laneSpaceKeyTemplate: ${CONFIG_NACOS_KEY_LANE_SPACE_TEMPLATE:govern-laneSpace-${id}}
        microservice:
          type: ${CONFIG_SERVICE_API_TYPE:file} # [file,jmsf,nacos]
          url: ${CONFIG_SERVICE_API_URL:http://api.jmsf.local:8080/v1}
          headers: ${CONFIG_SERVICE_API_HEADERS}
          interval: 3000
          timeout: 3000
          initialTimeout: 20000
          delay: 0
          fault: 5000
          # for jmsf
          jmsf:
            serviceUrl: /space/${space}/service/${service_name}/version/${service_version}?application=${application}
          # for nacos
          nacos:
            username: ${CONFIG_NACOS_USERNAME:nacos}
            password: ${CONFIG_NACOS_PASSWORD:nacos}
            namespace: ${CONFIG_NACOS_NAMESPACE:public}
            serviceGroup: ${CONFIG_NACOS_GROUP_SERVICE:DEFAULT_GROUP}
            serviceKeyTemplate: ${CONFIG_NACOS_KEY_SERVICE_TEMPLATE:govern-service-${name}}
      watchdog:
        enabled: true
        delay: 5000
        interval: 100
        timeout: 5000
      switch:
        govern:
          mq: ${CONFIG_LIVE_MQ_ENABLED:false}
          dubbo: true
          grpc: true
          sofarpc: true
          jsf: true
          spring: true
          zuul: true
          phevos: true
          rocketmq: true
          kafka: true
        live:
          enabled: ${CONFIG_LIVE_ENABLED:false}
        lane:
          enabled: ${CONFIG_LANE_ENABLED:false}
        transmission:
          enabled: ${CONFIG_TRANSMISSION_ENABLED:true}
          threadpool: ${CONFIG_TRANSMISSION_THREADPOOL_ENABLED:true}
        flowcontrol:
          enabled: ${CONFIG_FLOW_CONTROL_ENABLED:false}
          localhost: ${CONFIG_LOCALHOST_ENABLED:false}
          virtualthread: ${CONFIG_VIRTUAL_THREAD_ENABLED:false}
        failover:
          enabled: ${CONFIG_FAILOVER_ENABLED:false}
          db: ${CONFIG_FAILOVER_DB_ENABLED:${CONFIG_FAILOVER_ENABLED:false}}
          mq: ${CONFIG_FAILOVER_MQ_ENABLED:${CONFIG_FAILOVER_ENABLED:false}}
          mongodb: ${CONFIG_FAILOVER_MONGODB_ENABLED:true}
          rocketmq: ${CONFIG_FAILOVER_ROCKETMQ_ENABLED:true}
          redis: ${CONFIG_FAILOVER_REDIS_ENABLED:true}
        protect:
          enabled: ${CONFIG_PROTECT_ENABLED:false}
          db: ${CONFIG_PROTECT_DB_ENABLED:${CONFIG_PROTECT_ENABLED:false}}
          mariadb: ${CONFIG_PROTECT_MARIADB_ENABLED:true}
          mysql: ${CONFIG_PROTECT_MYSQL_ENABLED:true}
          postgresql: ${CONFIG_PROTECT_POSTGRESQL_ENABLED:true}
          opengauss: ${CONFIG_PROTECT_OPENGAUSS_ENABLED:true}
          mongodb: ${CONFIG_PROTECT_MONGODB_ENABLED:true}
          redis: ${CONFIG_PROTECT_REDIS_ENABLED:false}
        classloader:
          enabled: ${CONFIG_CLASSLOADER_ENABLED:true}
          springboot: true
      governance:
        initializeTimeout: ${CONFIG_POLICY_INITIALIZE_TIMEOUT:10000}
        shutdownWaitTime: ${CONFIG_SHUTDOWN_WAIT_TIME:10000}
        service:
          localFirst: ${CONFIG_LOCAL_FIRST:true}
          localFirstMode: ${CONFIG_LOCAL_FIRST_MODE:CELL}
          cellFailoverThresholds: ${CELL_FAILOVER_THRESHOLDS}
          serviceGroups: ${CONFIG_SERVICE_GROUPS:}
          serviceGroupOpen: ${CONFIG_SERVICE_GROUP_OPEN:true}
          responseException: ${CONFIG_RESPONSE_EXCEPTION:true}
          warmups: ${CONFIG_WARMUP_SERVICES:}
          systemPaths: ${CONFIG_SYSTEM_HTTP_PATHS}
          concurrencyLimiter:
            type: Resilience4j
            cleanInterval: 30000
            expireTime: 60000
          rateLimiter:
            type: SmoothBursty
            cleanInterval: 30000
            expireTime: 60000
            configs: ${CONFIG_RATE_LIMITER_CONFIG:}
          loadLimiter:
            cpuUsage: ${CONFIG_MAX_CPU_USAGE:}
            loadUsage: ${CONFIG_MAX_LOAD_USAGE:}
          circuitBreaker:
            type: Resilience4j
            cleanInterval: 30000
            expireTime: 60000
            autoHalfOpenEnabled: ${CONFIG_CIRCUIT_BREAKER_AUTO_HALF_OPEN_ENABLED:false}
            loggingEnabled: ${CONFIG_CIRCUIT_BREAKER_LOGGING_ENABLED:${CONFIG_CIRCUIT_BREAK_LOG_ENABLED:true}
          monitor:
            forwardEnabled: ${CONFIG_MONITOR_FORWARD_TRAFFIC_ENABLED:true}
            rejectEnabled: true
        mq:
          liveMode: ${CONFIG_LIVE_MQ_MODE:ISOLATION_CLUSTER}
          laneMode: ${CONFIG_LANE_MQ_MODE:SHARED}
          groupExpression: ${CONFIG_MQ_GROUP_EXPRESSION:${group}${_!lane}}
          topics:
        db:
          accessMode: ${CONFIG_DB_ACCESS_MODE:READ_WRITE}
        live:
          fallbackLocationIfNoSpace: ${CONFIG_FALLBACK_LOCATION_IF_NO_SPACE:false}
          hostEnabled: ${CONFIG_LIVE_HOST_ENABLED:false}
          hostExpression: ${CONFIG_LIVE_HOST_EXPRESSION}
          hosts: ${CONFIG_LIVE_HOSTS}
        lane:
          fallbackLocationIfNoSpace: ${CONFIG_FALLBACK_LOCATION_IF_NO_SPACE:false}
          hostEnabled: ${CONFIG_LANE_HOST_ENABLED:false}
          hostExpression: ${CONFIG_LANE_HOST_EXPRESSION}
          hosts: ${CONFIG_LANE_HOSTS}
        router:
          spring:
            discovery:
              disables: ${CONFIG_SPRING_DISCOVERY_DISABLES}
            gateway:
              pathFilters: ${CONFIG_SPRING_GATEWAY_PATH_FILTERS}
        transmission:
          type: ${CONFIG_TRANSMISSION_TYPE:live}
          autoDetect: ${CONFIG_TRANSMISSION_AUTO_DETECT:NONE}
          keys:
            - x-live-space-id
            - x-live-rule-id
            - x-live-uid
            - x-lane-space-id
            - x-lane-code
          prefixes:
            - x-live-
            - x-lane-
            - x-service-
          thread:
            excludeExecutors:
              - io.netty.channel.MultithreadEventLoopGroup
              - io.netty.channel.nio.NioEventLoop
              - io.netty.channel.SingleThreadEventLoop
              - io.netty.channel.kqueue.KQueueEventLoopGroup
              - io.netty.channel.kqueue.KQueueEventLoop
              - org.apache.tomcat.util.threads.ThreadPoolExecutor
              - org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor
              - org.apache.tomcat.util.threads.InlineExecutorService
              - org.apache.juli.AsyncFileHandler$LoggerExecutorService
              - javax.management.NotificationBroadcasterSupport$1
              - com.alibaba.druid.pool.DruidAbstractDataSource$SynchronousExecutor
            excludeTasks:
              - com.jd.live.agent.core.thread.NamedThreadFactory
              - com.jd.jr.sgm.client.disruptor.LogEventFactory
              - com.jd.jr.sgm.client.util.AgentThreadFactory
              - com.jd.pfinder.profiler.common.util.NamedThreadFactory
              - io.opentelemetry.sdk.internal.DaemonThreadFactory
              - io.sermant.dubbo.registry.factory.RegistryNotifyThreadFactory
              - io.sermant.dynamic.config.init.DynamicConfigThreadFactory
              - io.sermant.flowcontrol.common.factory.FlowControlThreadFactory
              - io.sermant.loadbalancer.factory.LoadbalancerThreadFactory
              - io.sermant.core.utils.ThreadFactoryUtils
              - io.sermant.implement.service.xds.handler.XdsHandler.NamedThreadFactory
              - io.sermant.discovery.factory.RealmServiceThreadFactory
              - org.apache.skywalking.apm.agent.core.boot.DefaultNamedThreadFactory
              - com.netflix.stats.distribution.DataPublisher$PublishThreadFactory
              - sun.rmi.runtime.RuntimeUtil$1
              - sun.rmi.transport.tcp.TCPTransport$1
              - sun.rmi.transport.DGCImpl$1
              - sun.rmi.transport.DGCAckHandler$1
              - org.apache.tomcat.util.threads.TaskThreadFactory
              - org.apache.juli.FileHandler$ThreadFactory
              - com.tongweb.container.startup.HostConfig$DeployWar
              - sun.nio.fs.PollingWatchService$PollingWatchKey$1
            excludeExecutorPrefixes:
              - com.jd.live.agent.shaded.
              - com.netflix.hystrix.util.HystrixTimer$ScheduledExecutor$
              - com.alibaba.nacos.
            excludeTaskPrefixes:
              - reactor.core.scheduler.BoundedElasticScheduler$$Lambda
              - org.springframework.cloud.commons.util.InetUtils$$Lambda$
              - com.alibaba.nacos.
              - com.netflix.discovery.
              - com.jd.live.agent.shaded.
              - org.apache.catalina.core.ContainerBase$
              - org.apache.catalina.core.StandardServer$$Lambda$
              - com.netflix.loadbalancer.PollingServerListUpdater$
              - com.netflix.hystrix.util.HystrixTimer$
              - com.netflix.servo.util.ExpiringCache$
              - com.zaxxer.hikari.pool.HikariPool$
        configCenter:
          enabled: ${CONFIG_CENTER_ENABLED:false}
          type: ${CONFIG_CENTER_TYPE:nacos}
          address: ${CONFIG_CENTER_ADDRESS:${CONFIG_EXTERNAL_HOST:${CONFIG_INTERNAL_HOST}}:${CONFIG_EXTERNAL_HTTP_PORT:${CONFIG_INTERNAL_HTTP_PORT:8848}}}
          username: ${CONFIG_CENTER_USERNAME:${CONFIG_USERNAME:nacos}}
          password: ${CONFIG_CENTER_PASSWORD:${CONFIG_PASSWORD:nacos}}
          grayEnabled: ${CONFIG_CENTER_GRAY_ENABLED:true}
          refresh:
            environmentEnabled: ${CONFIG_CENTER_REFRESH_ENVIRONMENT_ENABLED:false}
            beanEnabled: ${CONFIG_CENTER_REFRESH_BEAN_ENABLED:true}
            beanNames: ${CONFIG_CENTER_REFRESH_BEAN_NAMES:}
            beanClassPrefixes: ${CONFIG_CENTER_REFRESH_BEAN_CLASS_PREFIXES:}
            ignoreKeys: ${CONFIG_CENTER_REFRESH_IGNORE_KEYS:spring.application.name}
            ignoreKeyPrefixes: ${CONFIG_CENTER_REFRESH_IGNORE_KEY_PREFIXES:}
          names: ${CONFIG_CENTER_NAMES:}
          name:
            namespace: ${CONFIG_CENTER_NAMESPACE:public}
            name: ${CONFIG_CENTER_NAME:${APPLICATION_NAME}}
            profile: ${CONFIG_CENTER_PROFILE:${APPLICATION_SERVICE_GROUP}}
          properties: ${CONFIG_CENTER_PROPERTIES}
        registry:
          enabled: ${CONFIG_REGISTRY_ENABLED:false}
          registerAppServiceEnabled: ${CONFIG_REGISTER_APP_SERVICE_ENABLED:${CONFIG_REGISTRY_ENABLED:false}}
          subscribeMode: ${CONFIG_REGISTRY_SUBSCRIBE_MODE:AUTO}
          host:
            enabled: ${CONFIG_HOST_SERVICE_ENABLED:true}
            services: ${CONFIG_HOST_SERVICES}
          clusters:
            - type: ${CONFIG_REGISTRY_TYPE_FIRST:nacos}
              role: ${CONFIG_REGISTRY_ROLE_FIRST:SECONDARY}
              mode: ${CONFIG_REGISTRY_MODE_FIRST:FULL}
              address: ${CONFIG_REGISTRY_ADDRESS_FIRST:${REGISTRY_EXTERNAL_HOST:${REGISTRY_INTERNAL_HOST}}:${REGISTRY_EXTERNAL_HTTP_PORT:${REGISTRY_INTERNAL_HTTP_PORT:8848}}}
              username: ${CONFIG_REGISTRY_USERNAME_FIRST:${REGISTRY_USERNAME:}}
              password: ${CONFIG_REGISTRY_PASSWORD_FIRST:${REGISTRY_PASSWORD:}}
              properties: ${CONFIG_REGISTRY_PROPERTIES_FIRST}
              namespace: ${CONFIG_REGISTRY_NAMESPACE_FIRST:${REGISTRY_NAMESPACE:public}}
              group: ${CONFIG_REGISTRY_GROUP_FIRST:DEFAULT_GROUP}
              groupEnabled: ${CONFIG_REGISTRY_GROUP_ENABLED:true}
              denyEmptyEnabled: ${CONFIG_REGISTRY_DENY_EMPTY_ENABLED:false}
            - type: ${CONFIG_REGISTRY_TYPE_SECOND:nacos}
              role: ${CONFIG_REGISTRY_ROLE_SECOND:SECONDARY}
              mode: ${CONFIG_REGISTRY_MODE_SECOND:FULL}
              address: ${CONFIG_REGISTRY_ADDRESS_SECOND}
              username: ${CONFIG_REGISTRY_USERNAME_SECOND:${REGISTRY_USERNAME:}}
              password: ${CONFIG_REGISTRY_PASSWORD_SECOND:${REGISTRY_PASSWORD:}}
              properties: ${CONFIG_REGISTRY_PROPERTIES_SECOND}
              namespace: ${CONFIG_REGISTRY_NAMESPACE_SECOND:${REGISTRY_NAMESPACE:public}}
              group: ${CONFIG_REGISTRY_GROUP_SECOND:DEFAULT_GROUP}
              groupEnabled: ${CONFIG_REGISTRY_GROUP_ENABLED:true}
              denyEmptyEnabled: ${CONFIG_REGISTRY_DENY_EMPTY_ENABLED:false}
            - type: ${CONFIG_REGISTRY_TYPE_THIRD:nacos}
              role: ${CONFIG_REGISTRY_ROLE_THIRD:SECONDARY}
              mode: ${CONFIG_REGISTRY_MODE_THIRD:FULL}
              address: ${CONFIG_REGISTRY_ADDRESS_THIRD}
              username: ${CONFIG_REGISTRY_USERNAME_THIRD:${REGISTRY_USERNAME:}}
              properties: ${CONFIG_REGISTRY_PROPERTIES_THIRD}
              password: ${CONFIG_REGISTRY_PASSWORD_THIRD:${REGISTRY_PASSWORD:}}
              namespace: ${CONFIG_REGISTRY_NAMESPACE_THIRD:${REGISTRY_NAMESPACE:public}}
              group: ${CONFIG_REGISTRY_GROUP_THIRD:DEFAULT_GROUP}
              groupEnabled: ${CONFIG_REGISTRY_GROUP_ENABLED:true}
              denyEmptyEnabled: ${CONFIG_REGISTRY_DENY_EMPTY_ENABLED:false}
        probe:
          zookeeper:
            command: ${CONFIG_PROBE_ZOOKEEPER_COMMAND:srvr}
            response: ${CONFIG_PROBE_ZOOKEEPER_RESPONSE:}
          nacos:
            path: ${CONFIG_PROBE_NACOS_PATH:/nacos/v1/console/health/liveness}
            response: ${CONFIG_PROBE_NACOS_RESPONSE:OK}
        redis:
          command:
            manage: ${CONFIG_REDIS_MANAGE_COMMANDS:ACL,AUTH,AUTH2,HELLO,PING,QUIT,SELECT,SWAPDB,DBSIZE,FLUSHDB,FLUSHALL,TIME,CONFIG,INFO,SHUTDOWN,MONITOR,SLAVEOF,REPLICAOF,CLIENT,ASKING,READONLY,READWRITE,CLUSTER,SENTINEL,MODULE,LASTSAVE,SAVE,BGSAVE,BGREWRITEAOF,ROLE,FAILOVER,SLOWLOG,LOLWUT,COMMAND,RESET,LATENCY,WAIT,WAITAOF,MULTI,DISCARD,WATCH,UNWATCH}
            readonly: ${CONFIG_REDIS_READONLY_COMMANDS:GET,GETEX,GETDEL,GETBIT,GETRANGE,MGET,HGET,HMGET,HGETALL,HSTRLEN,HEXISTS,HLEN,HKEYS,HVALS,HRANDFIELD,EXISTS,TYPE,STRLEN,LLEN,LRANGE,LINDEX,LPOS,SCARD,SMEMBERS,SISMEMBER,SMISMEMBER,SRANDMEMBER,ZCARD,ZCOUNT,ZLEXCOUNT,ZRANGE,ZRANGEBYLEX,ZRANGEBYSCORE,ZRANK,ZREVRANGE,ZREVRANGEBYLEX,ZREVRANGEBYSCORE,ZREVRANK,ZSCORE,ZMSCORE,XLEN,XRANGE,XREVRANGE,XINFO,PFCOUNT,BITCOUNT,BITPOS,BITFIELD_RO,LCS,GEODIST,GEOHASH,GEOPOS,GEORADIUS_RO,GEOSEARCH,GEORADIUSBYMEMBER_RO}
      exporter:
        enabled: ${CONFIG_EXPORTER_ENABLED:true}
        type: ${CONFIG_EXPORTER_TYPE:${CONFIG_COUNTER_EXPORTER_TYPE:otlp.grpc}}
        endpoint: ${CONFIG_EXPORTER_ENDPOINT:${CONFIG_COUNTER_EXPORTER_ENDPOINT:http://otel-collector.joylive.svc:4317}}
        timeout: 5000
        readerInterval: 1000
        traffic:
          enabled: ${CONFIG_EXPORTER_TRAFFIC_ENABLED:true}
          gatewayEnabled: true
          serviceEnabled: true
        document:
          enabled: ${CONFIG_EXPORTER_DOCUMENT_ENABLED:false}
        exception:
          enabled: ${CONFIG_EXPORTER_EXCEPTION_ENABLED:true}
          maxDepth: 20
          stackTracePrefixes:
            - java.
            - javax.
            - jdk.
            - org.springframework.
            - org.apache.dubbo.
            - com.alibaba.dubbo.
            - redis.
            - org.redisson.
            - io.lettuce.
            - org.apache.rocketmq.
            - org.apache.kafka.
            - org.mariadb.jdbc.
            - com.mongodb.
            - org.opengauss.
            - org.postgresql.
            - com.netflix.discovery.
            - net.devh.boot.grpc.
            - com.alibaba.nacos
            - com.alibaba.cloud.nacos.
            - com.alipay.sofa.rpc.
            - io.grpc.
            - org.apache.commons.httpclient.
            - org.apache.http.
            - reactor.netty.http.client.
            - com.squareup.okhttp.
            - okhttp3.
            - org.apache.pulsar.
            - jakarta.servlet.
    
  injector.yaml: |
    # Define the version, environment variables, and other information of joylive-injector injecting joylive-agent
    agent:
      image: ghcr.m.daocloud.io/jd-opensource/joylive-agent
      version: v1.6.0
      envs:
        JAVA_TOOL_OPTIONS: -javaagent:/joylive/live.jar
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration scan="true" scanPeriod="10 seconds" debug="false">
        <statusListener class="com.jd.live.agent.shaded.ch.qos.logback.core.status.NopStatusListener"/>
    
        <conversionRule conversionWord="clr"
                        converterClass="com.jd.live.agent.implement.logger.slf4j.logback.ColorConverter"/>
        <conversionRule conversionWord="wex"
                        converterClass="com.jd.live.agent.implement.logger.slf4j.logback.WhitespaceThrowableProxyConverter"/>
        <conversionRule conversionWord="wEx"
                        converterClass="com.jd.live.agent.implement.logger.slf4j.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    
        <property name="LIVE_LOG_CONSOLE_PATTERN"
                  value="${LIVE_LOG_CONSOLE_PATTERN:-%clr(%d{${LIVE_LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LIVE_LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){red} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} [LiveAgent] %m%n${LIVE_LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
        <property name="LIVE_LOG_CONSOLE_CHARSET" value="${LIVE_LOG_CONSOLE_CHARSET:-${file.encoding:-UTF-8}}"/>
        <property name="LIVE_LOG_FILE_PATTERN"
                  value="${LIVE_LOG_FILE_PATTERN:-%d{${LIVE_LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LIVE_LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LIVE_LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
        <property name="LIVE_LOG_FILE_CHARSET" value="${LIVE_LOG_FILE_CHARSET:-${file.encoding:-UTF-8}}"/>
    
        <property scope="context" name="logger.dir" value="${LIVE_LOG_DIR}"/>
        <property scope="context" name="logger.application" value="${LIVE_APP_NAME}"/>
        <property scope="context" name="logger.level" value="${LIVE_LOG_LEVEL:-info}"/>
        <property scope="context" name="logger.advice.level" value="${LIVE_LOG_ADVICE_LEVEL:-${logger.level}}"/>
        <property scope="context" name="logger.route.level" value="${LIVE_LOG_ROUTE_LEVEL:-${logger.level}}"/>
        <property scope="context" name="logger.metric.level" value="${LIVE_LOG_METRIC_LEVEL:-${logger.level}}"/>
        <property scope="context" name="logger.unitFilter.level" value="${LIVE_LOG_UNIT_FILTER_LEVEL:-${logger.level}}"/>
        <property scope="context" name="logger.totalSize" value="${LIVE_LOG_TOTAL_SIZE:-10GB}"/>
        <property scope="context" name="logger.maxHistory" value="${LIVE_LOG_MAX_HISTORY:-30}"/>
        <property scope="context" name="logger.maxFileSize" value="${LIVE_LOG_MAX_SIZE:-1GB}"/>
        <property scope="context" name="logger.fileName" value="${LIVE_LOG_FILE_NAME:-${logger.dir}/live-agent.log}"/>
        <property scope="context" name="logger.fileNamePattern" value="${LIVE_LOG_FILE_NAME_PATTERN:-${logger.fileName}.%d{yyyyMMdd}.%i}"/>
    
        <appender name="CONSOLE_APPENDER" class="com.jd.live.agent.shaded.ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>
                    ${LIVE_LOG_CONSOLE_PATTERN}
                </pattern>
            </encoder>
        </appender>
    
        <appender name="ROLLING_APPENDER" class="com.jd.live.agent.shaded.ch.qos.logback.core.rolling.RollingFileAppender">
            <File>${logger.fileName}</File>
            <rollingPolicy class="com.jd.live.agent.shaded.ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${logger.fileNamePattern}</fileNamePattern>
                <maxHistory>${logger.maxHistory}</maxHistory>
                <maxFileSize>${logger.maxFileSize}</maxFileSize>
                <totalSizeCap>${logger.totalSize}</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>
                    ${LIVE_LOG_FILE_PATTERN}
                </pattern>
            </encoder>
        </appender>
    
        <logger name="com.jd.live.agent.bootstrap.bytekit.advice.AdviceHandler" level="${logger.advice.level}"/>
    
        <logger name="com.jd.live.agent.governance.invoke.filter.RouteFilterChain"
                level="${logger.route.level}"
                additivity="false">
            <appender-ref ref="CONSOLE_APPENDER"/>
        </logger>
    
        <logger name="com.jd.live.agent.implement.event.opentelemetry.log.LoggingMetricExporter"
                level="${logger.metric.level}"
                additivity="false">
            <appender-ref ref="CONSOLE_APPENDER"/>
        </logger>
    
        <root level="${logger.level}">
            <appender-ref ref="${LIVE_LOG_APPENDER:-ROLLING_APPENDER}"/>
        </root>
    
    </configuration>
---
# Source: joylive-injector/templates/otel.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    processors:
      batch:
      memory_limiter:
        # 80% of maximum memory up to 2G
        limit_mib: 1500
        # 25% of limit up to 2G
        spike_limit_mib: 512
        check_interval: 5s
    extensions:
      zpages: {}
    exporters:
      prometheus:
        endpoint: 0.0.0.0:8889
        namespace: ''
    service:
      extensions: [zpages]
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [prometheus]
---
# Source: joylive-injector/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: joylive-injector
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - events
      - configmaps
      - namespaces
      - nodes
    verbs:
      - "*"
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - "*"
  - apiGroups:
      - autoscaling
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - injector.joylive.io
    resources:
      - agentversions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - injector.joylive.io
    resources:
      - agentversions/finalizers
    verbs:
      - update
  - apiGroups:
      - injector.joylive.io
    resources:
      - agentversions/status
    verbs:
      - get
      - patch
      - update
---
# Source: joylive-injector/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: joylive-injector
  namespace:  joylive
subjects:
  - kind: ServiceAccount
    name: joylive-injector
    namespace:  joylive
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: joylive-injector
---
# Source: joylive-injector/templates/otel.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    app.kubernetes.io/managed-by: paas
    app.kubernetes.io/name: opentelemetry
    app: opentelemetry
    component: otel-collector
spec:
  ports:
    - name: otlp-grpc # Default endpoint for OpenTelemetry gRPC receiver.
      port: 4317
      protocol: TCP
      targetPort: 4317
    - name: otlp-http # Default endpoint for OpenTelemetry HTTP receiver.
      port: 4318
      protocol: TCP
      targetPort: 4318
    - name: metrics # Default endpoint for querying metrics.
      port: 8888
    - name: prometheus
      port: 8889

  type: NodePort
  selector:
    component: otel-collector
---
# Source: joylive-injector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: joylive-injector
  namespace: joylive
  labels:
    svc: joylive-injector
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    app: joylive-injector
---
# Source: joylive-injector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: joylive-injector
  namespace: joylive
  labels: 
    app.kubernetes.io/name: joylive-injector
    app.kubernetes.io/instance: joylive-injector
    app: joylive-injector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: joylive-injector
  template:
    metadata:
      labels:
        app: joylive-injector
    spec:
      serviceAccountName: joylive-injector
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: joylive-injector
                topologyKey: "kubernetes.io/hostname"
      containers:
        - env:
            - name: LOG_LEVEL
              value: "debug"
            - name: JOYLIVE_CONFIGMAP_NAME
              value: "joylive-injector-config"
            - name: JOYLIVE_RULE_CONFIGMAP_NAME
              value: "joylive-injector-rules"
            - name: JOYLIVE_NAMESPACE
              value: "joylive"
            - name: JOYLIVE_MATCH_ENV_LABELS
              value: "x-live, x-service"
            - name: JOYLIVE_CONTROL_PLANE_URL
              value: ""
            - name: JOYLIVE_FILTER_SENSITIVE
              value: "true"
            - name: JOYLIVE_CLUSTER_ID
              value: ""
            - name: JOYLIVE_MATCH_KEY
              value: "x-live-enabled"
            - name: JOYLIVE_MATCH_VALUE
              value: "true"
          name: joylive-injector
          image: ghcr.m.daocloud.io/jd-opensource/joylive-injector:v1.2.4
          imagePullPolicy: Always
          args:
            - --cert=/etc/kubernetes/ssl/dac.pem
            - --key=/etc/kubernetes/ssl/dac-key.pem
          livenessProbe:
            httpGet:
              scheme: HTTPS
              port: 443
              path: /livez
            periodSeconds: 10
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: 443
              path: /readyz
            periodSeconds: 10
            initialDelaySeconds: 5
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - mountPath: /etc/kubernetes/ssl/
              name: dynamic-admission-control-certs
              readOnly: true
      volumes:
        - name: dynamic-admission-control-certs
          secret:
            secretName: dynamic-admission-control-certs
---
# Source: joylive-injector/templates/otel.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 2
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
        - command:
            - "/otelcol"
            - "--config=/conf/otel-collector-config.yaml"
          image: otel/opentelemetry-collector:0.115.1
          name: otel-collector
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 400Mi
          ports:
            - containerPort: 55679 # Default endpoint for ZPages.
            - containerPort: 4317 # Default endpoint for OpenTelemetry receiver.
            - containerPort: 14250 # Default endpoint for Jaeger gRPC receiver.
            - containerPort: 14268 # Default endpoint for Jaeger HTTP receiver.
            - containerPort: 9411 # Default endpoint for Zipkin receiver.
            - containerPort: 8888  # Default endpoint for querying metrics.
            - containerPort: 8889  # Default endpoint for Prometheus.
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: GOMEMLIMIT
              value: 1600MiB
          volumeMounts:
            - name: otel-collector-config-vol
              mountPath: /conf
      #        - name: otel-collector-secrets
      #          mountPath: /secrets
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
#        - secret:
#            name: otel-collector-secrets
#            items:
#              - key: cert.pem
#                path: cert.pem
#              - key: key.pem
#                path: key.pem
---
# Source: joylive-injector/templates/mutatingwebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: joylive-injector
webhooks:
  - name: "joylive-injector-deployment.joylive.io"
    rules:
      - apiGroups: [ "apps" ]
        apiVersions: [ "v1","v1beta1" ]
        operations: [ "CREATE","UPDATE","DELETE" ]
        resources: [ "deployments" ]
        scope: "Namespaced"
    clientConfig:
      service:
        name: joylive-injector
        namespace: joylive
        path: /mutating/injection-deploy
        port: 443
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdKRENDQkF5Z0F3SUJBZ0lVU3VsRVQxWGhqSk5jeDJBdFVCa3ZtSlBBNDRJd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuTVJBd0RnWURWUVFIRXdkQwpaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkRiMjUwY205c01Tc3dLUVlEClZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeWFYUjVNU1V3SXdZRFZRUUQKRXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1CNFhEVEkwTURZeE1qQTRNekV3TUZvWApEVE0wTURZeE1EQTRNekV3TUZvd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuCk1SQXdEZ1lEVlFRSEV3ZENaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkQKYjI1MGNtOXNNU3N3S1FZRFZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeQphWFI1TVNVd0l3WURWUVFERXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXpDRStnZWorUkFOV2Z1NDhRQnF5Ry9HUVFQVFUKeVFHV29jZHVIQ0x4WUVrNUtIL1NNVHZsbGpWaERGOWxENEVyTnQ0Nk95QnBzOTBiTG5aWDJKR3hrdFdmcVM5aAo4RUY3NXUycU9QcWhjMTd0dkowNTFrb2ZxZmVQOVcvbUtudkhpMlBEak1nMk9MbDBJWG5GazJOVDFtUFd6bXZaCkEvS1ZBVzNCcGIrOEg3djZBR2hDNSsvK0M1UlRCMnhaTVFuUmdXd3dmRHdRTzd4Qml0cEdEZXovWGpnN0JmcmYKYkNGekdPQTJvRzVTbk1YNzhOOHNNVEJuRmliLzNmWG5EQ1k4RVdsa0xpaG5pcXg2N3lLWkZSYlBEZy9COGNqWgoyK3RWc2pORUk2VUJhczQvNXUySGNuWStGNGV0cGwzdkNKZHNHbEpUeml1eWN4bTc0N1RuZi9sQ2Z6T3gzNVJKCmRSWWpoQlVRak1acDRhaUtCZ3BqMkxtdS9NV25qQURjemVkbVVlWWJCUEEyUGV4MFI1RHNTeFQyOE90V0RkS3QKZHhiSTAvZEhoT2pZbDl6T1MzMkdsRlhKSFNQM1cwR0tTSFVhMUp4bjFncURpM2MrTUNEVUZFTzFVWTVSMnFlUQpxY3ZkdUhxd3owdHdpTTd1VE1ySVlndUkzVUNkRUdxcjNwd0dpQURIbkcvT1pIMHRhTUFTbXVmVk1KWGIvTjZmCjM2ZURxNHpEOGlpbjBYTUs4WWtONFVKZkFKYUlFeU11RU1qUndSYUhPUlU3d1ZKakJEVWNwcitrU3ZkWDAzOHYKVGNObWYvTjU4QzFzUm1KeURDYmE3aW1qakE3RDh0ZSt3UnVnZUlURzhyRENOOEVqQVFVVEhJQTk5NWQ3cStETQpSNXU4ZStEU1dXRDdHK3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGCk1BTUJBZjh3SFFZRFZSME9CQllFRkJ4UWxqNlYyMHU3SWg2RUYwVEs3KzFyWkgrNk1BMEdDU3FHU0liM0RRRUIKRFFVQUE0SUNBUUFlS2FVcm1TMWdOeXp0dzM1a3FzYU9sWGV0ekJwUFlIc2F4azVHV1JjR0lQSUZmd212ZzZKUAptanRiLzI3Y0FXY0V3QTZlQUpFYmw2Nm9Ic3lOWUNkcmZheUg0M010Y1lTaUV3RVhCS2JhU3dBVWdXZi9CelNaCkFEa3daMEo4bWZXSnQ3NE1BTHl0Mk56VXJpUjJKcmhoS2p4TWJMN2pMZnRJaGZyRGJ1NnJXb2FUNWZMUUFMSEgKa3kveXNaZlJYcVJ1MXJTdldva1VUY201cGIwWVljRE84aWs4Y041VkJmWENRYjYvUkhVUjI2OUNpdllYU0tHLwpTdjdCTkpmckV0U3U0V01ya01nVmo0NmZvQUpiMGFKdFhzLyt0bzBjWDlaSG5hMXR2OFlXZ2JScWJPRnJhSk44ClFPTHNtcW55Yk1Tcjdnd0o0Q3B6c3VMNWh4TEtZZnozQWJlek5scXFiNzZkbE1mYlA4bzJRL1lITXptS2JkWmcKS2JzeTBzSmFBZEtURkYrRzluYlpBbEI3V3RkazNLOTFGNGRxUUpOUzZyZVBKVE9QSWZaajFmS3N2eXRmd3YzcwpPYjNyY2tPeTE2WXFVZEtsNVB5SzI0RjVZMXRhQlp3T0MzODdxcWpaRS9JNGhHdFhFZVp5aTUwWmpWS1VkZkhCCnNYc1VzcmNtQ3h2cXViRDF0K1R2UmVqNHBpMkZLem1MWFFRTXVJNTlJWHRlN3dSYUxDVENNWVdvcGZHeXZBdDQKM1hHSm4rKzZ4UVV4V01qcUhMbUdyQWFNU1ZhWnYvL3dzVzBFanJsdFVPcXI5NkJkNXllOFFXRmdlV21EUlVvUgpWMlZZZWhRelVOT1NaN0VZeU5NckxlWXJXcXBSeXgxaDRNV2kzem5XNVBqNEZjTGhaTWd0blE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    admissionReviewVersions: [ "v1", "v1beta1" ]
    sideEffects: None
    timeoutSeconds: 5
    failurePolicy: Fail
    objectSelector:
      matchLabels: 
        x-live-enabled : "true"
  - name: "joylive-injector-pod.joylive.io"
    rules:
      - apiGroups: [ "" ]
        apiVersions: [ "v1","v1beta1" ]
        operations: [ "CREATE" ]
        resources: [ "pods" ]
        scope: "Namespaced"
    clientConfig:
      service:
        name: joylive-injector
        namespace: joylive
        path: /mutating/injection-pod
        port: 443
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdKRENDQkF5Z0F3SUJBZ0lVU3VsRVQxWGhqSk5jeDJBdFVCa3ZtSlBBNDRJd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuTVJBd0RnWURWUVFIRXdkQwpaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkRiMjUwY205c01Tc3dLUVlEClZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeWFYUjVNU1V3SXdZRFZRUUQKRXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1CNFhEVEkwTURZeE1qQTRNekV3TUZvWApEVE0wTURZeE1EQTRNekV3TUZvd2dha3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWURWUVFJRXdkQ1pXbHFhVzVuCk1SQXdEZ1lEVlFRSEV3ZENaV2xxYVc1bk1TSXdJQVlEVlFRS0V4bEVlVzVoYldsaklFRmtiV2x6YzJsdmJpQkQKYjI1MGNtOXNNU3N3S1FZRFZRUUxFeUpFZVc1aGJXbGpJRUZrYldsemMybHZiaUJEYjI1MGNtOXNJRk5sWTNWeQphWFI1TVNVd0l3WURWUVFERXh4RWVXNWhiV2xqSUVGa2JXbHpjMmx2YmlCRGIyNTBjbTlzSUVOQk1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXpDRStnZWorUkFOV2Z1NDhRQnF5Ry9HUVFQVFUKeVFHV29jZHVIQ0x4WUVrNUtIL1NNVHZsbGpWaERGOWxENEVyTnQ0Nk95QnBzOTBiTG5aWDJKR3hrdFdmcVM5aAo4RUY3NXUycU9QcWhjMTd0dkowNTFrb2ZxZmVQOVcvbUtudkhpMlBEak1nMk9MbDBJWG5GazJOVDFtUFd6bXZaCkEvS1ZBVzNCcGIrOEg3djZBR2hDNSsvK0M1UlRCMnhaTVFuUmdXd3dmRHdRTzd4Qml0cEdEZXovWGpnN0JmcmYKYkNGekdPQTJvRzVTbk1YNzhOOHNNVEJuRmliLzNmWG5EQ1k4RVdsa0xpaG5pcXg2N3lLWkZSYlBEZy9COGNqWgoyK3RWc2pORUk2VUJhczQvNXUySGNuWStGNGV0cGwzdkNKZHNHbEpUeml1eWN4bTc0N1RuZi9sQ2Z6T3gzNVJKCmRSWWpoQlVRak1acDRhaUtCZ3BqMkxtdS9NV25qQURjemVkbVVlWWJCUEEyUGV4MFI1RHNTeFQyOE90V0RkS3QKZHhiSTAvZEhoT2pZbDl6T1MzMkdsRlhKSFNQM1cwR0tTSFVhMUp4bjFncURpM2MrTUNEVUZFTzFVWTVSMnFlUQpxY3ZkdUhxd3owdHdpTTd1VE1ySVlndUkzVUNkRUdxcjNwd0dpQURIbkcvT1pIMHRhTUFTbXVmVk1KWGIvTjZmCjM2ZURxNHpEOGlpbjBYTUs4WWtONFVKZkFKYUlFeU11RU1qUndSYUhPUlU3d1ZKakJEVWNwcitrU3ZkWDAzOHYKVGNObWYvTjU4QzFzUm1KeURDYmE3aW1qakE3RDh0ZSt3UnVnZUlURzhyRENOOEVqQVFVVEhJQTk5NWQ3cStETQpSNXU4ZStEU1dXRDdHK3NDQXdFQUFhTkNNRUF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGCk1BTUJBZjh3SFFZRFZSME9CQllFRkJ4UWxqNlYyMHU3SWg2RUYwVEs3KzFyWkgrNk1BMEdDU3FHU0liM0RRRUIKRFFVQUE0SUNBUUFlS2FVcm1TMWdOeXp0dzM1a3FzYU9sWGV0ekJwUFlIc2F4azVHV1JjR0lQSUZmd212ZzZKUAptanRiLzI3Y0FXY0V3QTZlQUpFYmw2Nm9Ic3lOWUNkcmZheUg0M010Y1lTaUV3RVhCS2JhU3dBVWdXZi9CelNaCkFEa3daMEo4bWZXSnQ3NE1BTHl0Mk56VXJpUjJKcmhoS2p4TWJMN2pMZnRJaGZyRGJ1NnJXb2FUNWZMUUFMSEgKa3kveXNaZlJYcVJ1MXJTdldva1VUY201cGIwWVljRE84aWs4Y041VkJmWENRYjYvUkhVUjI2OUNpdllYU0tHLwpTdjdCTkpmckV0U3U0V01ya01nVmo0NmZvQUpiMGFKdFhzLyt0bzBjWDlaSG5hMXR2OFlXZ2JScWJPRnJhSk44ClFPTHNtcW55Yk1Tcjdnd0o0Q3B6c3VMNWh4TEtZZnozQWJlek5scXFiNzZkbE1mYlA4bzJRL1lITXptS2JkWmcKS2JzeTBzSmFBZEtURkYrRzluYlpBbEI3V3RkazNLOTFGNGRxUUpOUzZyZVBKVE9QSWZaajFmS3N2eXRmd3YzcwpPYjNyY2tPeTE2WXFVZEtsNVB5SzI0RjVZMXRhQlp3T0MzODdxcWpaRS9JNGhHdFhFZVp5aTUwWmpWS1VkZkhCCnNYc1VzcmNtQ3h2cXViRDF0K1R2UmVqNHBpMkZLem1MWFFRTXVJNTlJWHRlN3dSYUxDVENNWVdvcGZHeXZBdDQKM1hHSm4rKzZ4UVV4V01qcUhMbUdyQWFNU1ZhWnYvL3dzVzBFanJsdFVPcXI5NkJkNXllOFFXRmdlV21EUlVvUgpWMlZZZWhRelVOT1NaN0VZeU5NckxlWXJXcXBSeXgxaDRNV2kzem5XNVBqNEZjTGhaTWd0blE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    admissionReviewVersions: [ "v1", "v1beta1" ]
    sideEffects: None
    timeoutSeconds: 5
    failurePolicy: Fail
    objectSelector:
      matchLabels: 
        x-live-enabled : "true"
---
# Source: joylive-injector/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    meta.helm.sh/release-name: brolly
    meta.helm.sh/release-namespace: brolly
  labels:
    app.kubernetes.io/instance: brolly
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitor
    app.kubernetes.io/system: brolly
    integration: tpaas-jmsf-otel
    inputType: integrations
    release: brolly
  name: tpaas-jmsf-otel-slave
  namespace: brolly
spec:
  endpoints:
    - port: prometheus
      interval: 5s
  namespaceSelector:
    any: true
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
